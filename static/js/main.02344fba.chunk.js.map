{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","components/SocialLinks.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/GlobalStyle.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","fireBaseInstance","authService","auth","dbService","firestore","storageService","storage","Profile","userObj","refreshUser","useState","displayName","newDisplayName","setNewDisplayName","history","useHistory","onSubmit","event","a","preventDefault","updateProfile","onChange","value","target","type","placeholder","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","autoComplete","required","prev","SocialLinks","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Auth","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","maxLength","src","alt","width","height","NweetFactory","nweet","setNweet","attachment","setAttachment","alert","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","createrId","collection","add","fileInput","useRef","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","current","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","a_nweet","Navigation","to","AppRouter","isLoggedIn","exact","path","GlobalStyle","createGlobalStyle","reset","App","init","setInit","setUserObj","onAuthStateChanged","user","args","viewBox","d","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02344fba.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n  \r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const fireBaseInstance = firebase;\r\n\r\n// firebase의 모든것을 호출하는 대신 부분기능만 내보냄.\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    // const [myNweets, setMyNweets] = useState(\"\");\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n/*     const getMyNweets = async() => {\r\n        const nweets = await dbService.collection(\"nweets\").where(\"createrId\", \"==\", userObj.uid).orderBy(\"createdAt\",\"desc\").get();\r\n        const nweetsMap = nweets.docs.map((doc) => doc.data().text);\r\n        setMyNweets(nweetsMap);\r\n    }\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }) */\r\n    const onChange = (event) =>{\r\n        const {target: {value}} = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            })\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n    <>\r\n        <form onSubmit={onSubmit} >\r\n            <input onChange={onChange} type=\"text\" value={newDisplayName} placeholder=\"display name\" />\r\n            <input type=\"submit\" value=\"Update Profile\" />\r\n        </form>\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    // 1) useState 사용해서 input 태그의 이메일, 패스워드 조작.\r\n    // 2) newAccount는 가입or로그인 화면 제어\r\n    // 3) error는 에러메시지 출력용.\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n/*  react에선 input태그가 입력받은 value를 사용자에게 보여주지 않음.\r\n    각 input마다 onChange 이벤트에 함수를 부여해서 제어. */\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if(name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    //newAccount 참거짓 판별 후 가입or로그인 버튼 출력.\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            if(newAccount){\r\n                await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch(error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount(prev => !prev);\r\n    return(\r\n    <>\r\n    <div className=\"login_form_wrapper\">\r\n        <form onSubmit={onSubmit} className=\"login_form\">\r\n            <input className=\"login_form_id\" name=\"email\" type=\"text\" placeholder=\"Email\" value={email} onChange={onChange} autoComplete=\"username\" required/>\r\n            <input className=\"login_form_password\" name=\"password\" type=\"password\" placeholder=\"Password\" value={password} onChange={onChange} autoComplete=\"current-password\" required/>\r\n            <input className=\"login_form_submit\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} required/>\r\n            {error}\r\n        </form>\r\n    </div>\r\n        <span onClick={toggleAccount}>{newAccount ? \"Sign in\" : \"Create Account\" }</span>\r\n    </>\r\n    );\r\n};\r\nexport default AuthForm;","import { authService, fireBaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\n\r\nconst SocialLinks = () => {\r\n    //가입하면 newAccount가 거짓이니 false로 바꿔주고, 반대도 마찬가지로 뒤집어주는 작업.\r\n    //구글, 깃헙으로 로그인\r\n    const onSocialClick = async (event) => {\r\n        const { target: { name }} = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new fireBaseInstance.auth.GoogleAuthProvider();\r\n        } else if(name === \"github\"){\r\n            provider = new fireBaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n    return(\r\n        <>\r\n        <button onClick={onSocialClick} name=\"google\">Login with Google</button>\r\n        <button onClick={onSocialClick} name=\"github\">Login with Github</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SocialLinks;","import AuthForm from \"components/AuthForm\";\r\nimport SocialLinks from \"components/SocialLinks\";\r\n\r\n//인증 컴포넌트\r\nconst Auth = () => {\r\n\r\n    //화면 리턴\r\n    return(\r\n    <>\r\n    <div className=\"register\">\r\n        <AuthForm />\r\n        <div className=\"social_links\">\r\n        <SocialLinks />\r\n        </div>\r\n    </div>\r\n    </>\r\n    );\r\n};\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if(ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if(nweetObj.attachmentUrl !== \"\") {\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {target :{value}} = event;\r\n        setNewNweet(value);\r\n    };\r\n    return (\r\n        <div>\r\n            {editing ? \r\n                <>\r\n                {isOwner && <>\r\n                <form onSubmit={onSubmit} >\r\n                    <input onChange={onChange} type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} maxLength=\"80\" required />\r\n                    <input type=\"submit\" value=\"Update Nweet\" />\r\n                </form>\r\n                <button onClick={toggleEditing} >Cancel</button>\r\n                </>\r\n                }\r\n                </>\r\n                :\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && \r\n                    (\r\n                        <img src={nweetObj.attachmentUrl} alt=\"img\" width=\"50px\" height=\"50px\" />\r\n                    )\r\n                    }\r\n                    { isOwner && (\r\n                    <>\r\n                        <button onClick={onDeleteClick} >Delete Nweet</button>\r\n                        <button onClick={toggleEditing} >Edit Nweet</button>\r\n                    </>\r\n                    )}\r\n                 </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(nweet === \"\"){\r\n            alert(\"내용을 입력해주세요!\");\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            createrId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n         await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: {value}} = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => { \r\n        const {target:{files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget:{result}} = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => {\r\n        fileInput.current.value = null;\r\n        setAttachment(\"\");\r\n    };\r\n    const fileInput = useRef();\r\n    return(\r\n        <form onSubmit={onSubmit}>\r\n            <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength=\"80\" />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} ref={fileInput} />\r\n            <input type=\"submit\" value=\"Nweet\" />\r\n            {attachment && \r\n            <div>\r\n                <img src={attachment} alt=\"img\" width=\"50px\" height=\"50px\" />\r\n                <button onClick={onClearAttachment} >Clear</button>\r\n            </div>\r\n            }\r\n        </form>\r\n    );\r\n};\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    // 1) 컴포넌트 mount될때 실행.\r\n    // 2) nweets컬렉션에서 스냅샷들 가져옴(일종의 데이터). orderby로 시간차순 정렬.\r\n    // 3) 그걸 map으로 분해 후, nweetArray에 할당. 마지막으로 setNweets로 nweets에 배열 다시 보냄.\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").orderBy(\"createdAt\",\"desc\").onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id:doc.id, \r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return(\r\n    <div className=\"nweetWrapper\">\r\n        <NweetFactory userObj={userObj} />\r\n        <div>\r\n            {/* nweets에서 받아온 배열을 map으로 분해 및 텍스트 출력. */}\r\n            {nweets.map((a_nweet) => (\r\n                <Nweet key={a_nweet.id} nweetObj={a_nweet} isOwner={a_nweet.createrId === userObj.uid} />\r\n            ))} \r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    if(userObj.displayName === null){\r\n        userObj.displayName = \"익명\";\r\n    }\r\n    return(\r\n    <nav>\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/profile\"> {userObj.displayName}'s Profile </Link>\r\n            </li>\r\n        </ul>\r\n</nav>\r\n    );\r\n}\r\n;\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return(\r\n    <Router>\r\n        {isLoggedIn && <Navigation userObj={userObj} />}\r\n        <Switch>\r\n            {isLoggedIn ? (\r\n            <>\r\n                <Route exact path=\"/\">\r\n                    <Home userObj={userObj} />\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                    <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                </Route>\r\n            </>\r\n            ) : (\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n                )}\r\n        </Switch>\r\n    </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n${reset};\r\n`;\r\n\r\nexport default GlobalStyle;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport \"../css/App.css\";\nimport GlobalStyle from \"./GlobalStyle\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () =>{\n    const user = authService.currentUser;\n      setUserObj({\n        displayName: user.displayName,\n        uid: user.uid,\n        updateProfile: (args) => user.updateProfile(args),\n      });\n  };\n  return (\n    <>\n    <GlobalStyle />\n    <div className=\"main_wrapper_1\">\n      <div className=\"main_top\">\n        <header className=\"header\">\n          <div className=\"birdImg\">\n            <svg viewBox=\"0 0 24 24\" \n            aria-hidden=\"true\">\n              <g>\n                <path d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\">\n                </path>\n              </g>\n            </svg>\n          </div>\n        </header>\n        <main className=\"main\" >\n        <div className=\"birdImg2_wrapper\">\n          <svg viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n          className=\"birdImg2\">\n            <g>\n              <path d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\">\n                </path>\n              </g>\n          </svg>\n        </div>\n          <div className=\"main_text_wrapper\">\n            <span>지금 일어나고 있는 일</span>\n            <span>오늘 느위터에 로그인하세요.</span>\n          </div>\n          {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"initializing...\" }\n          <span>계정이 아직 없으신가요?</span>\n          <span>Create Account</span>\n        </main>\n      </div>\n      <div className=\"main_bottom\">\n        <footer className=\"footer\">\n        소개\n        고객센터\n        이용약관\n        개인정보 처리방침\n        쿠키 정책\n        광고 정보\n        블로그\n        상태\n        채용\n        브랜드 리소스\n        광고\n        마케팅\n        비즈니스용 트위터\n        개발자\n        디렉터리\n        설정\n        &copy;{new Date().getFullYear()}Nwitter</footer>\n      </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"css/Index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}