{"version":3,"sources":["fbase.js","components/Profile/EditProfile.js","components/Profile/ProfileTop.js","components/Nweets/GetMyNweets.js","routes/Profile.js","components/Nweets/Nweet.js","components/Nweets/NweetFactory.js","routes/Home.js","components/Auth/AuthForm.js","components/Auth/SocialLinks.js","routes/Auth.js","components/CreateAccount.js","components/Footer.js","routes/FirstScreen.js","routes/Navigation.js","routes/Aside.js","routes/Verified.js","components/Router.js","components/GlobalStyle.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","fireBaseInstance","authService","auth","dbService","firestore","storageService","storage","dbStore","EditProfile","userObj","refreshUser","setEdit","useState","displayName","newDisplayName","setNewDisplayName","profileImg","setProfileImg","onNickNameSubmit","event","a","preventDefault","updateProfile","onProfileImgSubmit","imgUrl","imgRef","ref","child","uid","putString","response","getDownloadURL","userRef","collection","where","get","then","querySnapshot","forEach","doc","id","update","profile","catch","error","console","log","userSetObj","backgroundImg","set","photoURL","className","onClick","onSubmit","type","accept","onChange","theFile","target","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","value","placeholder","src","alt","ProfileTop","edit","editing","useRef","useEffect","handleClickOutside","current","contains","document","addEventListener","removeEventListener","creationTime","GetMyNweets","myNweets","setMyNweets","getMyNweets","orderBy","nweets","nweetsMap","docs","map","data","text","Profile","history","useHistory","signOut","push","Nweet","nweetObj","isOwner","setEditing","menuOn","setMenuOn","setNweetTime","userId","setUserId","time","setTime","newNweet","setNewNweet","menuBtn","nweetAt","createdAt","now","Date","getTime","second","Math","floor","email","split","onDeleteClick","window","confirm","delete","attachmentUrl","refFromURL","toggleEditing","prev","onLikeBtnClick","onReNweetBtnClick","reNweet","includes","currentUser","baseVal","FieldValue","arrayRemove","arrayUnion","maxLength","required","viewBox","d","like","length","NweetFactory","userProfileImg","nweet","setNweet","attachment","setAttachment","nweetTyped","setNweetTyped","fileInput","nweetText","MutationObserver","mutationList","observer","innerText","observe","characterData","childList","subtree","alert","date","attachmentRef","uuidv4","getFullYear","getMonth","getDay","getHours","getMinutes","createrId","add","role","contentEditable","suppressContentEditableWarning","htmlFor","cx","cy","r","Home","setNweets","topCoord","profileUrl","storageRef","profileIs","onSnapshot","snapshot","nweetInfoObj","scrollIntoView","a_nweet","AuthForm","loginEmail","setLoginEmail","loginPassword","setLoginPassword","name","signInWithEmailAndPassword","message","autoComplete","SocialLinks","onSocialClick","provider","GoogleAuthProvider","setCustomParameters","prompt","GithubAuthProvider","signInWithPopup","user","providerData","Auth","CreateAccount","setSignUp","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","createUserWithEmailAndPassword","languageCode","location","replace","Footer","FirstScreen","signUp","signUpPage","Navigation","emailToNickname","to","Aside","Verified","setNotWatching","localStorage","removeItem","close","AppRouter","isLoggedIn","verifying","setVeyrifying","notWatching","emailsended","JSON","parse","getItem","undefined","exact","path","from","GlobalStyle","createGlobalStyle","reset","App","init","setInit","setUserObj","onAuthStateChanged","metadata","args","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1c71a555.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n  \r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const fireBaseInstance = firebase;\r\n\r\n// firebase의 모든것을 호출하는 대신 부분기능만 내보냄.\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\nexport const dbStore = firebase.firestore;","import React, { useState } from \"react\";\r\nimport \"./EditProfile.css\"\r\nimport { dbService, storageService } from \"fbase\";\r\n\r\nconst EditProfile = ({ userObj, refreshUser, setEdit }) => {\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const [profileImg, setProfileImg] = useState(\"\");\r\n    const onNickNameChange = (event) =>{\r\n        const {target: {value}} = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onNickNameSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            })\r\n            refreshUser();\r\n        }\r\n    };\r\n    const onProfileImgSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let imgUrl = \"\";\r\n        if(profileImg !== \"\"){\r\n            const imgRef = storageService.ref().child(`${userObj.uid}/profile_img/1`);\r\n            const response = await imgRef.putString(profileImg, \"data_url\");\r\n            imgUrl = await response.ref.getDownloadURL();\r\n            const userRef = dbService.collection(\"nweets\");\r\n            const query = userRef.where(\"createrId\", \"==\", `${userObj.uid}`);\r\n            query.get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    userRef.doc(doc.id).update({\r\n                    profile: imgUrl\r\n                    })\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n        }\r\n        const userSetObj = {\r\n            profileImg: imgUrl,\r\n            backgroundImg: \"editProfile\"\r\n        };\r\n        await dbService.collection(\"userInfo\").doc(userObj.uid).set(userSetObj);\r\n        await userObj.updateProfile({\r\n            photoURL: imgUrl\r\n        })\r\n        setProfileImg(\"\");\r\n        refreshUser();\r\n    };\r\n    const onProfileImgChange = (event) => {\r\n        const {target:{files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget:{result}} = finishedEvent;\r\n            setProfileImg(result);\r\n        };\r\n        if(theFile){\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n    const onProfileCloseClick = () => {\r\n        setEdit(false);\r\n    }\r\n    const onProfileSaveClick = () => {\r\n        console.log(\"i'm save btn\");\r\n        setEdit(false);\r\n    }\r\n    return(\r\n        <>\r\n        <div className=\"edit_profile_menu_wrapper\">\r\n            <button onClick={onProfileCloseClick}> 닫기 </button>\r\n            <button onClick={onProfileSaveClick}> 저장 </button>\r\n        </div>\r\n        <div className=\"edit_profile_content\">\r\n            <div className=\"edit_profile_top_wrapper\">\r\n                <div className=\"update_profile_img_wrapper\">\r\n                    <form onSubmit={onProfileImgSubmit}>\r\n                        <input\r\n                        className=\"update_profile_img\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\" \r\n                        onChange={onProfileImgChange}\r\n                        />\r\n                        <input\r\n                        type=\"submit\"\r\n                        value=\"update profile img\"\r\n                        />\r\n{/*                         <input\r\n                        className=\"update_background_img\"\r\n                        type=\"file\"\r\n                        accept=\"image/*\" \r\n                        /> */}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"edit_profile_bottom_wrapper\">\r\n                <div className=\"update_nickname_wrapper\">\r\n                    <form onSubmit={onNickNameSubmit} >\r\n                        <input onChange={onNickNameChange} type=\"text\" value={newDisplayName} placeholder=\"이름\" />\r\n                        <input type=\"submit\" value=\"Update Profile\" />\r\n                    </form>\r\n                </div>\r\n                <img src={userObj.photoURL} alt=\"profileimg\"/>\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n                ㅇ\r\n                <br />\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditProfile;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport EditProfile from \"./EditProfile\";\r\n\r\nconst ProfileTop = ({ userObj, refreshUser }) => {\r\n    const [edit, setEdit] = useState(false);\r\n    const editing = useRef();\r\n    const onClick = () => {\r\n        setEdit(true);\r\n    }\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if(edit && !editing.current.contains(event.target)){\r\n                setEdit(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleClickOutside)\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside)\r\n        }\r\n    }, [edit]);\r\n    return(\r\n        <div className=\"profile_top\">\r\n            <div className=\"profile_top_top\">\r\n                {edit &&\r\n                <div className=\"edit_profile_modal_wrapper\">\r\n                    <div className=\"edit_profile_modal\" ref={editing}>\r\n                        <EditProfile userObj={userObj} refreshUser={refreshUser} setEdit={setEdit}/>\r\n                    </div>\r\n                </div>\r\n                }\r\n                <div className=\"profile_img_wrapper1\">\r\n                    <div className=\"profile_img_wrapper\">\r\n                        <div className=\"profile_img_circle\">\r\n                            <img src={userObj.photoURL} alt=\"profile_image\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile_background_img\">\r\n                        프로필 배경이미지\r\n                    </div>\r\n                </div>\r\n        </div>\r\n            <div className=\"profile_top_bottom\">\r\n                <div className=\"profile_edit_wrapper\">\r\n                    <div className=\"profile_edit\">\r\n                        <span onClick={onClick}>프로필 수정</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile_info_name\">\r\n                    <span>닉네임 : {userObj.displayName}</span>\r\n                </div>\r\n                <div className=\"profile_info_state\">\r\n                    <span>상태메세지:</span>\r\n                </div>\r\n                <div className=\"profile_info_creationtime\">\r\n                    <span>가입일 : {userObj.creationTime}</span>\r\n                </div>\r\n                <div className=\"profile_menu_bar\">\r\n                <span className=\"profile_menu_tweet\">트윗</span> \r\n                <span className=\"profile_menu_like\">마음에 들어요</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default ProfileTop;","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst GetMyNweets = ({ userObj }) => {\r\n    const [myNweets, setMyNweets] = useState(\"\");\r\n    const getMyNweets = async() => {\r\n        const nweets = await dbService.collection(\"nweets\").where(\"createrId\", \"==\", userObj.uid).orderBy(\"createdAt\",\"desc\").get();\r\n        const nweetsMap = nweets.docs.map((doc) => doc.data().text);\r\n        setMyNweets(nweetsMap);\r\n    }\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, []);\r\n    return(\r\n        <span>{myNweets}</span>\r\n    );\r\n};\r\n\r\nexport default GetMyNweets;\r\n","import { authService } from \"fbase\";\r\n// import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../css/Profile.css\"\r\nimport ProfileTop from \"components/Profile/ProfileTop\";\r\nimport GetMyNweets from \"components/Nweets/GetMyNweets\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    // const [verified, setVeriFied] = useState(false); \r\n\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    //  useEffect(() => {\r\n    //     if(!userObj.verified){\r\n    //         return;\r\n    //     } else {\r\n    //         setVeriFied(true);\r\n    //     }\r\n    // }, []);\r\n    return (\r\n    <>\r\n    <div className=\"profile\">\r\n        <ProfileTop userObj={userObj} refreshUser={refreshUser}/>\r\n        <div className=\"profile_bottom\">\r\n            프로필_바텀\r\n            <GetMyNweets userObj={userObj} />\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </div>\r\n    </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import { authService, dbService, dbStore, storageService } from \"fbase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./Nweet.css\"\r\n\r\nconst Nweet = ({ nweetObj, isOwner, profile, userObj }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [menuOn, setMenuOn] = useState(false);\r\n    const [nweetTime, setNweetTime] = useState(\"\");\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [time, setTime] = useState(\"\");\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const menuBtn = useRef();\r\n    useEffect(() => {\r\n        const nweetAt = `\r\n        ${nweetObj.createdAt[1]}년 \r\n        ${nweetObj.createdAt[2]}월 \r\n        ${nweetObj.createdAt[3]}일\r\n        ${nweetObj.createdAt[4]}시\r\n        ${nweetObj.createdAt[5]}분\r\n        `;\r\n        setNweetTime(nweetAt);\r\n        let now = new Date().getTime();\r\n        let second = Math.floor((now - nweetObj.createdAt[0])/1000);\r\n        if(second>2592000) {\r\n            setTime(`${Math.floor(second/2592000)}달`)\r\n        } else if(second>604800) {\r\n            setTime(`${Math.floor(second/604800)}주`)\r\n        } else if(second>86400) {\r\n            setTime(`${Math.floor(second/86400)}일`)\r\n        } else if(second>3600) {\r\n            setTime(`${Math.floor(second/3600)}시간`)\r\n        } else if(second>60) {\r\n            setTime(`${Math.floor(second/60)}분`)\r\n        } else if(second === 0) {\r\n            setTime(`따끈따끈`)\r\n        } else if(60>=second) {\r\n            setTime(`${second}초 전`)\r\n        }\r\n        const userId = userObj.email.split(\"@\");\r\n        setUserId(userId);\r\n }, [])\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if(ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if(nweetObj.attachmentUrl !== \"\") {\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {target :{value}} = event;\r\n        setNewNweet(value);\r\n    };\r\n    const onLikeBtnClick = async (event) => {\r\n        console.log(event.target.className);\r\n    }\r\n    const onReNweetBtnClick = async (event) => {\r\n        if(nweetObj.reNweet.includes(authService.currentUser.uid, 0)) {\r\n            await dbService.collection(\"nweets\").doc(`${event.target.className.baseVal}`).update({\r\n            reNweet: dbStore.FieldValue.arrayRemove(`${authService.currentUser.uid}`)\r\n            })\r\n            return;\r\n        }\r\n        await dbService.collection(\"nweets\").doc(`${event.target.className.baseVal}`).update({\r\n            reNweet: dbStore.FieldValue.arrayUnion(`${authService.currentUser.uid}`)\r\n        })\r\n    }\r\n    const onMenuClick = () => {\r\n        setMenuOn(prev => !prev);\r\n    }\r\n    return (\r\n        <>\r\n            {editing ? \r\n                <>\r\n                {isOwner && <>\r\n                <form onSubmit={onSubmit} >\r\n                    <input onChange={onChange} type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} maxLength=\"80\" required />\r\n                    <input type=\"submit\" value=\"Update Nweet\" />\r\n                </form>\r\n                <button onClick={toggleEditing} >Cancel</button>\r\n                </>\r\n                }\r\n                </>\r\n                :\r\n                <>\r\n                <div className=\"nweet_wrapper\">\r\n                    <div className=\"nweet\">\r\n                        <div className=\"nweet_left\">\r\n                            <img src={profile} alt=\"img\" />\r\n                        </div>\r\n                        <div className=\"nweet_right\">\r\n                            <div className=\"nweet_right_top\">\r\n                                <div className=\"nweet_info\">\r\n                                    <span className=\"nweet_info_displayName\">{nweetObj.displayName}</span>\r\n                                    <span className=\"nweet_info_userId\">{userId[0]}</span>\r\n                                    <span className=\"block\">·</span>\r\n                                    <span className=\"nweet_info_timeAgo\">{time}</span>\r\n                                    {/* <span>{nweetTime}</span> */}\r\n                                </div>\r\n                                <div className=\"nweet_menu_wrapper\">\r\n                                        <button ref={menuBtn} className=\"nweet_menu\" onClick={onMenuClick}>메뉴</button>\r\n                                        { menuOn && isOwner && (\r\n                                        <>\r\n                                        <div className=\"nweet_drop_down\">\r\n                                            <div className=\"nweet_drop_menu\" onClick={onDeleteClick}>\r\n                                                <span className=\"nweet_delete_nweet\">이 트윗 지우기</span>\r\n                                            </div>\r\n                                            <div className=\"nweet_drop_menu\" onClick={toggleEditing}>\r\n                                                <span className=\"nweet_edit_nweet\">이 트윗 수정하기</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        </>\r\n                                        )}\r\n                                        {\r\n                                            menuOn && !isOwner && <button>이 유저에게 관심없음</button>\r\n                                        }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"nweet_right_center\">\r\n                                <h4 className=\"nweet_content\">{nweetObj.text}</h4>\r\n                                {nweetObj.attachmentUrl && (\r\n                                    <div className=\"nweet_content_img_wrapper\">\r\n                                        <img src={nweetObj.attachmentUrl} alt=\"img\" />\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"nweet_right_bottom\">\r\n                                <div className=\"nweet_right_bottom_like\">\r\n                                    <svg viewBox=\"0 0 24 24\" \r\n                                    aria-hidden=\"true\" \r\n                                    className={nweetObj.id}\r\n                                    onClick={onLikeBtnClick}>\r\n                                        <g>\r\n                                            <path d=\"M12 21.638h-.014C9.403 21.59 1.95 14.856 1.95 8.478c0-3.064 2.525-5.754 5.403-5.754 2.29 0 3.83 1.58 4.646 2.73.814-1.148 2.354-2.73 4.645-2.73 2.88 0 5.404 2.69 5.404 5.755 0 6.376-7.454 13.11-10.037 13.157H12zM7.354 4.225c-2.08 0-3.903 1.988-3.903 4.255 0 5.74 7.034 11.596 8.55 11.658 1.518-.062 8.55-5.917 8.55-11.658 0-2.267-1.823-4.255-3.903-4.255-2.528 0-3.94 2.936-3.952 2.965-.23.562-1.156.562-1.387 0-.014-.03-1.425-2.965-3.954-2.965z\">\r\n                                            </path>\r\n                                        </g>\r\n                                    </svg>\r\n                                    <span>{nweetObj.like.length}</span>\r\n                                </div>\r\n                                <div className=\"nweet_right_bottom_reNweet\">\r\n                                    <svg viewBox=\"0 0 24 24\" \r\n                                    aria-hidden=\"true\" \r\n                                    className={nweetObj.id}\r\n                                    onClick={onReNweetBtnClick}>\r\n                                        <g>\r\n                                            <path d=\"M23.77 15.67c-.292-.293-.767-.293-1.06 0l-2.22 2.22V7.65c0-2.068-1.683-3.75-3.75-3.75h-5.85c-.414 0-.75.336-.75.75s.336.75.75.75h5.85c1.24 0 2.25 1.01 2.25 2.25v10.24l-2.22-2.22c-.293-.293-.768-.293-1.06 0s-.294.768 0 1.06l3.5 3.5c.145.147.337.22.53.22s.383-.072.53-.22l3.5-3.5c.294-.292.294-.767 0-1.06zm-10.66 3.28H7.26c-1.24 0-2.25-1.01-2.25-2.25V6.46l2.22 2.22c.148.147.34.22.532.22s.384-.073.53-.22c.293-.293.293-.768 0-1.06l-3.5-3.5c-.293-.294-.768-.294-1.06 0l-3.5 3.5c-.294.292-.294.767 0 1.06s.767.293 1.06 0l2.22-2.22V16.7c0 2.068 1.683 3.75 3.75 3.75h5.85c.414 0 .75-.336.75-.75s-.337-.75-.75-.75z\">\r\n                                            </path>\r\n                                        </g>\r\n                                    </svg>\r\n                                    <span>{nweetObj.reNweet.length}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                 </>\r\n            }\r\n            </>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./NweetFactory.css\";\r\n\r\nconst NweetFactory = ({ userObj, userProfileImg }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [nweetTyped, setNweetTyped] = useState(false);\r\n    const fileInput = useRef();\r\n    const nweetText = useRef();\r\n    useEffect(() => {\r\n        const config = { characterData: true, childList: true, subtree: true };\r\n        const callback = function(mutationList, observer) {\r\n            for(let mutation of mutationList) {\r\n                if (mutation.type === \"characterData\") {\r\n                    setNweet(nweetText.current.innerText);\r\n                    setNweetTyped(true);\r\n                } else if (nweetText.current.innerText === \"\") {\r\n                    setNweetTyped(false);\r\n                }\r\n            }\r\n        };\r\n        const observer = new MutationObserver(callback);\r\n        observer.observe(nweetText.current, config);\r\n        console.log(\"renderd\");\r\n    }, [])\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(nweet === \"\"){\r\n            alert(\"내용을 입력해주세요!\");\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        let date = new Date();\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/nweet_img/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: [date.getTime(), date.getFullYear(), date.getMonth(), date.getDay(), date.getHours(), date.getMinutes()],\r\n            createrId: userObj.uid,\r\n            attachmentUrl,\r\n            reNweet: [],\r\n            like: [],\r\n            profile: userObj.photoURL,\r\n            displayName: userObj.displayName\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n        nweetText.current.innerText = \"\";\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {target:{files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget:{result}} = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if(theFile){\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n/*     const onClearAttachment = () => {\r\n        fileInput.current.value = null;\r\n        setAttachment(\"\");\r\n    }; */\r\n    const onFileClick = (event) => {\r\n        event.target.value = null;\r\n    }\r\n    const aaaa = () => {\r\n        return;\r\n    }\r\n    return(\r\n        <>\r\n        <div className=\"nweet_factory_right\">\r\n            <div className=\"nweet_factory_nweet_wrapper\">\r\n                <div \r\n                className={ nweetTyped ? \"hidden placeholder\" : \"placeholder\"}>\r\n                무슨 일이 일어나고 있나요?\r\n                </div>\r\n                <span\r\n                className=\"nweet_factory_nweet_text\"\r\n                role=\"textbox\"\r\n                contentEditable=\"true\"\r\n                suppressContentEditableWarning=\"true\"\r\n                maxLength=\"80\"\r\n                htmlFor=\"put_text\"\r\n                ref={nweetText}>\r\n                </span>\r\n            </div>\r\n            {attachment && \r\n                <div className=\"nweet_factory_attachmentImg\">\r\n                    <img src={attachment} alt=\"img\" />\r\n                    {/* <button onClick={onClearAttachment} >Clear</button> */}\r\n                </div>\r\n                }\r\n            <form onSubmit={onSubmit} className=\"nweet_factory_form\">\r\n                    <textarea\r\n                    className=\"nweet_factory_nweet_input hidden\" \r\n                    placeholder=\"무슨일?\" \r\n                    maxLength=\"80\" \r\n                    id=\"put_text\"\r\n                    value={nweet}\r\n                    onChange={aaaa}\r\n                    />\r\n                <div className=\"nweet_factory_form_bottom\">\r\n                    <div className=\"nweet_factory_choose_img\">\r\n                        <label htmlFor=\"inputt\">\r\n                            <svg viewBox=\"0 0 24 24\" \r\n                            aria-hidden=\"true\" \r\n                            className=\"icon\"\r\n                            >\r\n                                <g>\r\n                                    <path d=\"M19.75 2H4.25C3.01 2 2 3.01 2 4.25v15.5C2 20.99 3.01 22 4.25 22h15.5c1.24 0 2.25-1.01 2.25-2.25V4.25C22 3.01 20.99 2 19.75 2zM4.25 3.5h15.5c.413 0 .75.337.75.75v9.676l-3.858-3.858c-.14-.14-.33-.22-.53-.22h-.003c-.2 0-.393.08-.532.224l-4.317 4.384-1.813-1.806c-.14-.14-.33-.22-.53-.22-.193-.03-.395.08-.535.227L3.5 17.642V4.25c0-.413.337-.75.75-.75zm-.744 16.28l5.418-5.534 6.282 6.254H4.25c-.402 0-.727-.322-.744-.72zm16.244.72h-2.42l-5.007-4.987 3.792-3.85 4.385 4.384v3.703c0 .413-.337.75-.75.75z\">\r\n                                    </path>\r\n                                    <circle cx=\"8.868\" cy=\"8.309\" r=\"1.542\">\r\n                                    </circle>\r\n                                </g>\r\n                            </svg>\r\n                            <input\r\n                            id=\"inputt\"\r\n                            className=\"nweet_factory_choosefile hidden\"\r\n                            type=\"file\" \r\n                            accept=\"image/*\" \r\n                            onChange={onFileChange}\r\n                            onClick={onFileClick}\r\n                            ref={fileInput} />\r\n                        </label>\r\n                    </div>\r\n                    <input \r\n                    className={nweetTyped ? \"nweet_factory_nweet_on\" : \"nweet_factory_nweet_off\"}\r\n                    type=\"submit\"\r\n                    value=\"트윗하기\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\nexport default NweetFactory;","import Nweet from \"components/Nweets/Nweet\";\r\nimport NweetFactory from \"components/Nweets/NweetFactory\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport \"../css/Home.css\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    const topCoord = useRef();\r\n    // 1) 컴포넌트 mount될때 실행.\r\n    // 2) nweets컬렉션에서 스냅샷들 가져옴(일종의 데이터). orderby로 시간차순 정렬.\r\n    // 3) 그걸 map으로 분해 후, nweetArray에 할당. 마지막으로 setNweets로 nweets에 배열 다시 보냄.\r\n    useEffect(() => {\r\n         const profileIs = async () => {\r\n            if(userObj.photoURL === null) {\r\n                let profileUrl = \"\";\r\n                const storageRef = storageService.ref().child(`userDeafultSet/profile_img/userprofile.png`);\r\n                profileUrl = await storageRef.getDownloadURL();\r\n                const userSetObj = {\r\n                    profileImg: profileUrl,\r\n                    backgroundImg: \"home\"\r\n                };\r\n                userObj.updateProfile({\r\n                    photoURL: profileUrl\r\n                })\r\n                await dbService.collection(\"userInfo\").doc(userObj.uid).set(userSetObj);\r\n            }\r\n        };\r\n        profileIs();\r\n        dbService.collection(\"nweets\").orderBy(\"createdAt\",\"desc\").onSnapshot((snapshot) => {\r\n            const nweetInfoObj = snapshot.docs.map(doc => ({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetInfoObj);\r\n        });\r\n    }, []);\r\n    const onClick = () => {\r\n        topCoord.current.scrollIntoView(false);\r\n    };\r\n    return(\r\n    <>\r\n    <div className=\"home_center\">\r\n        <div className=\"home_center_wrapper\">\r\n            <div className=\"home_center_homebar_wrapper\" onClick={onClick}>\r\n                <div className=\"home_center_homebar\">\r\n                <span>홈</span>\r\n                <span>★</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"home_center_nweet_wrapper\" ref={topCoord}>\r\n                <div className=\"home_center_nweet_profile_img\">\r\n                    <img src={userObj.photoURL} alt=\"img\" />\r\n                </div>\r\n                <NweetFactory userObj={userObj} />\r\n            </div>\r\n            <div className=\"home_center_bottom\">\r\n                <div className=\"nweets\">\r\n                    {/* nweets에서 받아온 배열을 map으로 분해 및 텍스트 출력. */}\r\n                    {nweets.map((a_nweet) => (\r\n                        <Nweet key={a_nweet.id} \r\n                        nweetObj={a_nweet} \r\n                        isOwner={a_nweet.createrId === userObj.uid}\r\n                        profile={a_nweet.profile}\r\n                        userObj={userObj}\r\n                        />\r\n                ))} \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AuthForm = () => {\r\n    // 1) useState 사용해서 input 태그의 이메일, 패스워드 조작.\r\n    const [loginEmail, setLoginEmail] = useState(\"\");\r\n    const [loginPassword, setLoginPassword] = useState(\"\");\r\n    const history = useHistory();\r\n/*  react에선 input태그가 입력받은 value를 사용자에게 보여주지 않음.\r\n    각 input마다 onChange 이벤트에 함수를 부여해서 제어. */\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"login_email\"){\r\n            setLoginEmail(value);\r\n        } else if(name === \"login_password\") {\r\n            setLoginPassword(value);\r\n        }\r\n    };\r\n    //로그인\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            await authService.signInWithEmailAndPassword(loginEmail, loginPassword);\r\n            history.push(\"/home\");\r\n            } catch(error) {\r\n            console.log(error.message);\r\n        }\r\n    };\r\n    return(\r\n    <>\r\n    <div className=\"login_form_wrapper\">\r\n        <form onSubmit={onSubmit} className=\"login_form\">\r\n            <input \r\n            className=\"login_form_id\" \r\n            name=\"login_email\" \r\n            type=\"text\" \r\n            placeholder=\"Email\" \r\n            value={loginEmail} \r\n            onChange={onChange} \r\n            autoComplete=\"username\" \r\n            required />\r\n            <input\r\n            className=\"login_form_password\" \r\n            name=\"login_password\" \r\n            type=\"password\" \r\n            placeholder=\"Password\" \r\n            value={loginPassword} \r\n            onChange={onChange} \r\n            autoComplete=\"current-password\"\r\n            required />\r\n            <input \r\n            className=\"login_form_submit\" \r\n            type=\"submit\" \r\n            value=\"Log In\" \r\n            required />\r\n        </form>\r\n    </div>\r\n    </>\r\n    );\r\n};\r\nexport default AuthForm;","import { authService, dbService, fireBaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SocialLinks = () => {\r\n    //가입하면 newAccount가 거짓이니 false로 바꿔주고, 반대도 마찬가지로 뒤집어주는 작업.\r\n    //구글, 깃헙으로 로그인\r\n    const history = useHistory();\r\n    const onSocialClick = async (event) => {\r\n        const { target: { name }} = event;\r\n        let provider;\r\n        let a = \"\";\r\n        if(name === \"google\"){\r\n            provider = new fireBaseInstance.auth.GoogleAuthProvider();\r\n            provider.setCustomParameters({\r\n                prompt: \"select_account\"\r\n            });\r\n        } else if(name === \"github\"){\r\n            provider = new fireBaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n        const user = authService.currentUser;\r\n        user.providerData.forEach((profile) => {\r\n            a = profile.photoURL;\r\n        });\r\n        const userSetObj = {\r\n            profileImg: a,\r\n            backgroundImg: \"sociallinks\"\r\n        };\r\n        await dbService.collection(\"userInfo\").doc(user.uid).set(userSetObj);\r\n        history.push(\"/home\");\r\n    };\r\n    return(\r\n        <>\r\n        <button onClick={onSocialClick} name=\"google\">Login with Google</button>\r\n        <button onClick={onSocialClick} name=\"github\">Login with Github</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SocialLinks;","import AuthForm from \"components/Auth/AuthForm\";\r\nimport SocialLinks from \"components/Auth/SocialLinks\";\r\n\r\n//인증 컴포넌트\r\nconst Auth = () => {\r\n\r\n    //화면 리턴\r\n    return(\r\n    <>\r\n    <div className=\"register\">\r\n        <AuthForm />\r\n        <div className=\"social_links\">\r\n        <SocialLinks />\r\n        </div>\r\n    </div>\r\n    </>\r\n    );\r\n};\r\nexport default Auth;","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../css/CreateAccount.css\"\r\n\r\nconst CreateAccount = ({ setSignUp }) => {\r\n    const [registerEmail, setRegisterEmail] = useState(\"\");\r\n    const [registerPassword, setRegisterPassword] = useState(\"\");\r\n    const history = useHistory();\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"register_email\") {\r\n            setRegisterEmail(value);\r\n        } else if(name === \"register_password\") {\r\n            setRegisterPassword(value);\r\n        }\r\n    };\r\n/*     const emailVerification = () => {\r\n        authService.currentUser.sendEmailVerification()\r\n        .then(() => {\r\n            alert(\"verification link sent to your email. please check email.\");\r\n        });\r\n    }; */\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            await authService.createUserWithEmailAndPassword(registerEmail, registerPassword);\r\n            authService.languageCode = \"ko\";\r\n            alert(\"가입완료\");\r\n            history.push(\"/home\")\r\n            // emailVerification();\r\n            // window.localStorage.setItem(\"sendMail\", true);\r\n            } catch(error) {\r\n            console.log(error.message, \"에러!\");\r\n            window.location.replace(\"/\");\r\n        }\r\n    };\r\n    const onClick = () => {\r\n        setSignUp(false);\r\n    }\r\n    return(\r\n        <>\r\n        <span>회원 가입</span>\r\n        <form onSubmit={onSubmit} className=\"register_form\">\r\n            <input \r\n            className=\"register_form_id\" \r\n            name=\"register_email\" \r\n            type=\"text\" \r\n            placeholder=\"Email\" \r\n            autoComplete=\"off\"\r\n            value={registerEmail} \r\n            onChange={onChange} \r\n            required/>\r\n            <input \r\n            className=\"register_form_password\" \r\n            name=\"register_password\" \r\n            type=\"password\" \r\n            placeholder=\"Password\" \r\n            autoComplete=\"new-password\"\r\n            value={registerPassword} \r\n            onChange={onChange} \r\n            required\r\n            />\r\n            <input \r\n            className=\"register_form_submit\" \r\n            type=\"submit\" \r\n            value=\"Register\" \r\n            required\r\n            />\r\n        </form>\r\n        <button onClick={onClick}>닫기</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreateAccount;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n        소개\r\n        고객센터\r\n        이용약관\r\n        개인정보 처리방침\r\n        쿠키 정책\r\n        광고 정보\r\n        블로그\r\n        상태\r\n        채용\r\n        브랜드 리소스\r\n        광고\r\n        마케팅\r\n        비즈니스용 트위터\r\n        개발자\r\n        디렉터리\r\n        설정\r\n        &copy;{new Date().getFullYear()}Nwitter\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Auth from \"routes/Auth\";\r\nimport CreateAccount from \"../components/CreateAccount\";\r\nimport Footer from \"../components/Footer\";\r\n\r\n\r\nconst FirstScreen = ({ userObj }) => {\r\n    const [signUp, setSignUp] = useState(false);\r\n    const signUpPage = useRef();\r\n    const onClick = () => {\r\n        setSignUp(true);\r\n    };\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if(signUp && !signUpPage.current.contains(event.target)){\r\n                setSignUp(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleClickOutside)\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside)\r\n        }\r\n    }, [signUp]);\r\n    return(\r\n    <div className=\"main_wrapper_1\">\r\n        {signUp && (\r\n        <div className=\"modal_wrapper\">\r\n            <div className=\"modal\">\r\n                <div className=\"register_wrapper\" ref={signUpPage}>\r\n                 <CreateAccount setSignUp={setSignUp} userObj={userObj}/>\r\n                </div>\r\n            </div>\r\n        </div>)}\r\n  \r\n        <div className=\"main_top\">\r\n            {/* 화면좌측 */}\r\n            <header className=\"header\">\r\n                <div className=\"birdImg\">\r\n                    <svg viewBox=\"0 0 24 24\" \r\n                    aria-hidden=\"true\">\r\n                    <g>\r\n                        <path d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\">\r\n                        </path>\r\n                    </g>\r\n                    </svg>\r\n                </div>\r\n            </header>\r\n            {/* 화면우측 */}\r\n            <main className=\"main\">\r\n                <div className=\"birdImg2_wrapper\">\r\n                    <svg viewBox=\"0 0 24 24\"\r\n                    aria-hidden=\"true\"\r\n                    className=\"birdImg2\">\r\n                    <g>\r\n                        <path d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\">\r\n                        </path>\r\n                    </g>\r\n                    </svg>\r\n                </div>\r\n                    <div className=\"main_text_wrapper\">\r\n                        <span>지금 일어나고 있는 일</span>\r\n                        <span>오늘 ㅇㅇㅇ에 로그인하세요.</span>\r\n                    </div>\r\n                    <Auth />\r\n                    <div className=\"main_regist_text\">\r\n                        <span>계정이 아직 없으신가요?</span>\r\n                        <span onClick={onClick} className=\"sign_up\">가입하기</span>\r\n                    </div>\r\n            </main>\r\n        </div>\r\n        <div className=\"main_bottom\">\r\n           <Footer />\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default FirstScreen;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj} ) => {\r\n    if(userObj.displayName === null){\r\n        const email = userObj.email;\r\n        const emailToNickname = email.split(\"@\");\r\n        userObj.displayName = emailToNickname[0];\r\n    }\r\n    return(\r\n        <nav className=\"nav\">\r\n            <div className=\"nav_menu_wrapper1\">\r\n                <div className=\"nav_menu_wrapper2\">\r\n                    <div className=\"nav_menu\">\r\n                        <svg viewBox=\"0 0 24 24\"\r\n                            aria-hidden=\"true\"\r\n                            className=\"nav_birdImg2\">\r\n                            <g>\r\n                                <path d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\">\r\n                                </path>\r\n                            </g>\r\n                            </svg>\r\n                        <ul>\r\n                            <li>\r\n                                <Link to=\"/home\">\r\n                                    <div className=\"nav_home_wrapper\">\r\n                                    <svg viewBox=\"0 0 24 24\" \r\n                                        aria-hidden=\"true\" \r\n                                        className=\"nav_icon\">\r\n                                        <g>\r\n                                        <path d=\"M22.58 7.35L12.475 1.897c-.297-.16-.654-.16-.95 0L1.425 7.35c-.486.264-.667.87-.405 1.356.18.335.525.525.88.525.16 0 .324-.038.475-.12l.734-.396 1.59 11.25c.216 1.214 1.31 2.062 2.66 2.062h9.282c1.35 0 2.444-.848 2.662-2.088l1.588-11.225.737.398c.485.263 1.092.082 1.354-.404.263-.486.08-1.093-.404-1.355zM12 15.435c-1.795 0-3.25-1.455-3.25-3.25s1.455-3.25 3.25-3.25 3.25 1.455 3.25 3.25-1.455 3.25-3.25 3.25z\">\r\n                                        </path>\r\n                                        </g>\r\n                                    </svg>\r\n                                    <span className=\"nav_menu_text\">홈</span>\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/profile\">\r\n                                <div className=\"nav_profile_wrapper\">\r\n                                <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\" className=\"nav_icon\"><g><path d=\"M21 7.337h-3.93l.372-4.272c.036-.412-.27-.775-.682-.812-.417-.03-.776.27-.812.683l-.383 4.4h-6.32l.37-4.27c.037-.413-.27-.776-.68-.813-.42-.03-.777.27-.813.683l-.382 4.4H3.782c-.414 0-.75.337-.75.75s.336.75.75.75H7.61l-.55 6.327H3c-.414 0-.75.336-.75.75s.336.75.75.75h3.93l-.372 4.272c-.036.412.27.775.682.812l.066.003c.385 0 .712-.295.746-.686l.383-4.4h6.32l-.37 4.27c-.036.413.27.776.682.813l.066.003c.385 0 .712-.295.746-.686l.382-4.4h3.957c.413 0 .75-.337.75-.75s-.337-.75-.75-.75H16.39l.55-6.327H21c.414 0 .75-.336.75-.75s-.336-.75-.75-.75zm-6.115 7.826h-6.32l.55-6.326h6.32l-.55 6.326z\"></path></g></svg> \r\n                                <span className=\"nav_menu_text\">{userObj.displayName}의 프로필</span>\r\n                                </div>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n;\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport \"./Aside.css\"\r\n\r\nconst Aside = () => {\r\n    return(\r\n        <div className=\"aside\">\r\n            <div className=\"aside_wrapper\">\r\n                <div className=\"aside_left\">\r\n                    <div className=\"aside_left_search\">\r\n                        검색\r\n                    </div>\r\n                    <div className=\"aside_left_trend\">\r\n                        트렌드\r\n                    </div>\r\n                    <div className=\"aside_left_follow_recommend\">\r\n                        팔로우 추천\r\n                    </div>\r\n                    <div className=\"aside_left_footer\">\r\n                        이용 약관 등\r\n                    </div>\r\n                </div>\r\n                <div className=\"aside_right\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Aside;","import React, { useEffect } from \"react\";\r\n\r\nconst Verified = ({ setNotWatching }) => {\r\n    useEffect(() => {\r\n        setNotWatching(false);\r\n    })\r\n    const onClick = () => {\r\n        window.localStorage.removeItem(\"sendMail\");\r\n        window.close();\r\n    }\r\n    return(\r\n        <div>\r\n            <span>인증이 완료되었습니다</span>\r\n            <button onClick={onClick}>확인</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Verified;","import { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Home from \"../routes/Home\";\r\nimport FirstScreen from \"../routes/FirstScreen\";\r\nimport Navigation from \"../routes/Navigation\";\r\nimport Aside from \"routes/Aside\";\r\nimport Verified from \"routes/Verified\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    const [verifying, setVeyrifying] = useState(false);\r\n    const [notWatching, setNotWatching] = useState(true);\r\n    useEffect(() => {\r\n        const emailsended = JSON.parse(window.localStorage.getItem(\"sendMail\"));\r\n        if(emailsended === null || emailsended === undefined || emailsended === false) {\r\n            return;\r\n        } else {\r\n            setVeyrifying(true);\r\n        }\r\n    }, [verifying]);\r\n    return(\r\n    <Router>\r\n        {isLoggedIn && notWatching &&<Navigation userObj={userObj} />}\r\n        <Switch>\r\n            {verifying &&\r\n            <Route exact path=\"/verifying\">\r\n            <Verified setNotWatching={setNotWatching}/>\r\n            </Route>\r\n            }\r\n            {isLoggedIn ? (\r\n            <>\r\n            <Redirect from=\"/\" to=\"/home\" />\r\n                <Route exact path=\"/home\">\r\n                    <Home userObj={userObj} />\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                    <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                </Route>\r\n            </>\r\n            ) : (\r\n                <>\r\n                <Route path=\"*\">\r\n                    <FirstScreen userObj={userObj} isLoggedIn={isLoggedIn} />\r\n                </Route>\r\n                </>\r\n                )}\r\n        </Switch>\r\n        {isLoggedIn && notWatching && <Aside />}\r\n    </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n${reset};\r\n`;\r\n\r\nexport default GlobalStyle;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport \"../css/App.css\";\nimport GlobalStyle from \"./GlobalStyle\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          email: user.email,\n          photoURL: user.photoURL,\n          creationTime: user.metadata.creationTime,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () =>{\n    const user = authService.currentUser;\n      setUserObj({\n        displayName: user.displayName,\n        uid: user.uid,\n        email: user.email,\n        photoURL: user.photoURL,\n        creationTime: user.metadata.creationTime,\n        updateProfile: (args) => user.updateProfile(args),\n      });\n  };\n  return (\n    <>\n    <GlobalStyle />\n    {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"initializing...\" }\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}